name: CI & Release

on:
  pull_request:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

# Caches Rust dependencies and target/ dir for faster builds
jobs:
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --all --locked --verbose

  build:
    name: Build & Package (${{ matrix.os }})
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_suffix: linux
            archive: tar.gz
          - os: macos-latest
            artifact_suffix: macos
            archive: zip
          - os: windows-latest
            artifact_suffix: windows
            archive: zip
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Build release (CLI)
        run: cargo build --release --package resourcer_cli --locked --verbose
      - name: Package artifact
        shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}
        run: |
          if ('${{ matrix.os }}' -eq 'windows-latest') {
            $BIN_PATH = "target/release/resourcer_cli.exe"
            $OUT_DIR = "dist"
            New-Item -ItemType Directory -Force -Path $OUT_DIR
            Copy-Item $BIN_PATH -Destination $OUT_DIR
            $ARCHIVE_NAME = "resourcer_cli-${{ matrix.artifact_suffix }}.zip"
            Compress-Archive -Path "$OUT_DIR/*" -DestinationPath "$OUT_DIR/$ARCHIVE_NAME"
            echo "ARCHIVE_NAME=$ARCHIVE_NAME" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            BIN_PATH=target/release/resourcer_cli
            OUT_DIR=dist
            mkdir -p "$OUT_DIR"
            cp "$BIN_PATH" "$OUT_DIR/"
            cd "$OUT_DIR"
            ARCHIVE_NAME="resourcer_cli-${{ matrix.artifact_suffix }}.${{ matrix.archive }}"
            if [ "${{ matrix.archive }}" = "zip" ]; then
              zip -9 "$ARCHIVE_NAME" *
            else
              tar -czf "$ARCHIVE_NAME" *
            fi
            echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
          }
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: dist/${{ env.ARCHIVE_NAME }}

      - name: Upload to GitHub Release (tag builds)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/${{ env.ARCHIVE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 