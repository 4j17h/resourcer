name: CI & Release

on:
  pull_request:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

# Caches Rust dependencies and target/ dir for faster builds
jobs:
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --all --locked --verbose

  build:
    name: Build & Package (${{ matrix.os }})
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_suffix: linux
            archive: tar.gz
          - os: macos-latest
            artifact_suffix: macos
            archive: zip
          - os: windows-latest
            artifact_suffix: windows
            archive: zip
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Build release (CLI)
        run: cargo build --release --package sourcedumper_cli --locked --verbose
      - name: Package artifact
        shell: bash
        run: |
          BIN_PATH=target/release/sourcedumper_cli${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          OUT_DIR=dist
          mkdir -p "$OUT_DIR"
          cp "$BIN_PATH" "$OUT_DIR/"
          cd "$OUT_DIR"
          ARCHIVE_NAME="sourcedumper_cli-${{ matrix.artifact_suffix }}.${{ matrix.archive }}"
          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip -9 "$ARCHIVE_NAME" *
          else
            tar -czf "$ARCHIVE_NAME" *
          fi
          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
          echo "BIN_PATH=$BIN_PATH" >> $GITHUB_ENV
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: dist/${{ env.ARCHIVE_NAME }}

      - name: Upload to GitHub Release (tag builds)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/${{ env.ARCHIVE_NAME }}
            ${{ env.BIN_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 